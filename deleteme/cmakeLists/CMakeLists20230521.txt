cmake_minimum_required(VERSION 3.25.0)
project(HU_Galaxy_GalaxyWrapper LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -flto=4")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -flto=4")


set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
message(" this is CMAKE_MODULE_PATH  "   ${CMAKE_MODULE_PATH})

# Find Python and related packages (Python 3.5 or later)
#set(  Python_EXECUTABLE  '/home/mp74207/CLionProjects/HU_GalaxyPackage/venv38/bin/python')
#set(  Python_EXECUTABLE  'venv/bin/python')
message("this is the input Python_EXECUTABLE"   ${Python_EXECUTABLE})
find_package(Python REQUIRED COMPONENTS Interpreter Development NumPy)


# Fetch pybind11
include(FetchContent)

FetchContent_Declare(
        pybind11
        GIT_REPOSITORY https://github.com/pybind/pybind11.git
        GIT_TAG        v2.10.4
)

FetchContent_MakeAvailable(pybind11)

# Find other required packages
find_package(NLopt CONFIG REQUIRED)



# Add source files
pybind11_add_module(${PROJECT_NAME}
        HU_Galaxy.cpp
        Galaxy.cpp
        )

# Specify the include directories
target_include_directories(${PROJECT_NAME} PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/include
        ${Python_INCLUDE_DIRS}
        ${NLopt_INCLUDE_DIRS}
        )

# Link libraries
target_link_libraries(${PROJECT_NAME} PRIVATE
        ${Python_LIBRARIES}
        ${Python_NumPy_LIBRARIES}
        NLopt::nlopt
        pybind11::module
        pybind11::lto
        m
        stdc++fs
        )
